// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

type EnvSource = Record<string, string | undefined>;

declare const __SUPABASE_ENV__:
  | (EnvSource & {
      VITE_SUPABASE_URL?: string;
      VITE_SUPABASE_PUBLISHABLE_KEY?: string;
    })
  | undefined;

const loadBundlerEnv = (): EnvSource | undefined => {
  if (typeof __SUPABASE_ENV__ !== 'undefined' && __SUPABASE_ENV__ !== null) {
    return __SUPABASE_ENV__;
  }

  if (typeof globalThis !== 'undefined' && '__SUPABASE_ENV__' in globalThis) {
    const globalEnv = (globalThis as typeof globalThis & { __SUPABASE_ENV__?: EnvSource }).__SUPABASE_ENV__;
    if (globalEnv) {
      return globalEnv;
    }
  }

  return undefined;
};

const processEnv = typeof process !== 'undefined'
  ? ((process.env ?? {}) as EnvSource)
  : undefined;

const envSource: EnvSource = loadBundlerEnv() ?? processEnv ?? {};

const SUPABASE_URL = envSource.VITE_SUPABASE_URL ?? 'http://localhost:54321';
const SUPABASE_PUBLISHABLE_KEY = envSource.VITE_SUPABASE_PUBLISHABLE_KEY ?? 'test-key';

const authStorage = typeof window !== 'undefined' && window?.localStorage ? window.localStorage : undefined;

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: authStorage,
    persistSession: true,
    autoRefreshToken: true,
  }
});
